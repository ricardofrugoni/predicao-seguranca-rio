"""
üó∫Ô∏è MAPA CHOROPLETH - CRIMINALIDADE DO MUNIC√çPIO DO RIO
======================================================

Mapa APENAS do munic√≠pio do Rio de Janeiro.
Fundo escuro, √°reas pintadas completamente.
"""

import streamlit as st
import pandas as pd
import folium
import json
from pathlib import Path
from streamlit_folium import folium_static

st.set_page_config(
    page_title="üó∫Ô∏è Mapa de Criminalidade - Rio de Janeiro",
    page_icon="üó∫Ô∏è",
    layout="wide"
)

st.title("üó∫Ô∏è Mapa de Criminalidade - Munic√≠pio do Rio de Janeiro")
st.markdown("### Intensidade Criminal por Regi√£o")
st.warning("‚ö†Ô∏è **ATEN√á√ÉO:** Este mapa exibe APENAS o munic√≠pio do Rio de Janeiro. As √°reas externas aparecem escuras.")

# Cores por n√≠vel
cores_nivel = {
    "Muito Baixo": "#2ecc71",
    "Baixo": "#27ae60", 
    "M√©dio": "#f39c12",
    "Alto": "#e67e22",
    "Muito Alto": "#e74c3c"
}

def carregar_geojson():
    """Carrega GeoJSON das √°reas"""
    caminhos = [
        Path(__file__).parent.parent / "data" / "shapefiles" / "areas_detalhadas_rio.geojson",
        Path("data/shapefiles/areas_detalhadas_rio.geojson"),
        Path("projeto_violencia_rj/data/shapefiles/areas_detalhadas_rio.geojson"),
        Path(__file__).parent.parent / "data" / "shapefiles" / "zonas_rio_realista.geojson",
        Path("data/shapefiles/zonas_rio_realista.geojson"),
    ]
    
    for caminho in caminhos:
        try:
            if caminho.exists():
                with open(caminho, 'r', encoding='utf-8') as f:
                    return json.load(f)
        except:
            continue
    return None

def carregar_limite_municipal():
    """Carrega limite do munic√≠pio"""
    caminhos = [
        Path(__file__).parent.parent / "data" / "shapefiles" / "limite_municipal_ibge.geojson",
        Path("data/shapefiles/limite_municipal_ibge.geojson"),
        Path(__file__).parent.parent / "data" / "shapefiles" / "limite_municipal_rio.geojson",
        Path("data/shapefiles/limite_municipal_rio.geojson"),
    ]
    
    for caminho in caminhos:
        try:
            if caminho.exists():
                with open(caminho, 'r', encoding='utf-8') as f:
                    return json.load(f)
        except:
            continue
    return None

def criar_mapa():
    """Cria mapa focado apenas no munic√≠pio"""
    
    geojson_areas = carregar_geojson()
    limite_municipal = carregar_limite_municipal()
    
    if not geojson_areas:
        st.error("‚ùå GeoJSON das √°reas n√£o encontrado!")
        return None
    
    # Criar mapa com tiles escuro
    mapa = folium.Map(
        location=[-22.9068, -43.4200],
        zoom_start=11,
        tiles='CartoDB dark_matter',  # Fundo escuro
        min_zoom=10,
        max_zoom=14,
        max_bounds=True
    )
    
    # Adicionar limite municipal (borda do munic√≠pio)
    if limite_municipal:
        folium.GeoJson(
            limite_municipal,
            style_function=lambda x: {
                'fillColor': 'transparent',
                'color': '#ffffff',
                'weight': 3,
                'fillOpacity': 0
            }
        ).add_to(mapa)
    
    # Adicionar cada √°rea com preenchimento completo
    for feature in geojson_areas.get('features', []):
        nivel = feature['properties'].get('nivel', 'M√©dio')
        nome = feature['properties'].get('nome', '')
        cor = cores_nivel.get(nivel, '#f39c12')
        
        folium.GeoJson(
            feature,
            style_function=lambda x, cor=cor: {
                'fillColor': cor,
                'color': cor,  # Mesma cor da borda
                'weight': 0.5,
                'fillOpacity': 0.9,  # Quase opaco para parecer pintura
                'opacity': 0.9
            },
            highlight_function=lambda x: {
                'fillOpacity': 1.0,
                'weight': 2
            },
            tooltip=folium.Tooltip(f"<b>{nome}</b><br>N√≠vel: {nivel}")
        ).add_to(mapa)
    
    # Legenda
    legenda = '''
    <div style="position: fixed; bottom: 50px; right: 50px; width: 200px;
                background-color: rgba(0, 0, 0, 0.8); z-index:9999; padding: 15px;
                border: 2px solid white; border-radius: 5px; color: white;">
        <p style="margin:0; font-weight: bold; font-size: 16px; text-align: center;">
            N√≠vel de Criminalidade
        </p>
        <div style="margin: 10px 0; padding: 8px; background-color: #2ecc71; 
                    border-radius: 3px; text-align: center;">
            <b>Muito Baixo</b>
        </div>
        <div style="margin: 10px 0; padding: 8px; background-color: #27ae60; 
                    border-radius: 3px; text-align: center;">
            <b>Baixo</b>
        </div>
        <div style="margin: 10px 0; padding: 8px; background-color: #f39c12; 
                    border-radius: 3px; text-align: center;">
            <b>M√©dio</b>
        </div>
        <div style="margin: 10px 0; padding: 8px; background-color: #e67e22; 
                    border-radius: 3px; text-align: center;">
            <b>Alto</b>
        </div>
        <div style="margin: 10px 0; padding: 8px; background-color: #e74c3c; 
                    border-radius: 3px; text-align: center;">
            <b>Muito Alto</b>
        </div>
    </div>
    '''
    mapa.get_root().html.add_child(folium.Element(legenda))
    
    return mapa

# Layout
col1, col2 = st.columns([3, 1])

with col1:
    st.markdown("#### üìç Mapa do Munic√≠pio do Rio de Janeiro")
    st.info("üí° **Nota:** Fundo escuro indica √°reas fora do munic√≠pio. Apenas o Rio de Janeiro √© exibido.")
    
    mapa = criar_mapa()
    if mapa:
    folium_static(mapa, width=900, height=600)
    else:
        st.error("Erro ao carregar o mapa")
        st.code("python scripts/buscar_dados_oficiais_rio.py")

with col2:
    st.markdown("#### üìä Informa√ß√µes")
    
    st.markdown("""
    **üó∫Ô∏è Caracter√≠sticas do Mapa:**
    
    ‚úÖ Apenas munic√≠pio do Rio  
    ‚úÖ Fundo escuro fora do munic√≠pio  
    ‚úÖ √Åreas pintadas por intensidade  
    ‚úÖ Cores s√≥lidas (n√£o transparentes)
    
    **üìç Regi√µes Inclu√≠das:**
    - Zona Sul (verde)
    - Centro (laranja)
    - Zona Norte (laranja/vermelho)
    - Zona Oeste (vermelho)
    """)
    
    st.markdown("---")
    
    st.markdown("#### üé® Legenda R√°pida")
    st.markdown("""
    üü¢ **Verde** - Baixa criminalidade  
    üü° **Laranja** - M√©dia criminalidade  
    üî¥ **Vermelho** - Alta criminalidade
    """)

st.markdown("---")
st.markdown("""
<div style="text-align: center; padding: 20px; color: #666;">
    <p><b>Munic√≠pio do Rio de Janeiro</b></p>
    <p>Mapa com fundo escuro mostrando apenas as √°reas do munic√≠pio</p>
    <p><small>√Åreas escuras = Fora do munic√≠pio (Baixada Fluminense, Niter√≥i, etc.)</small></p>
</div>
""", unsafe_allow_html=True)
